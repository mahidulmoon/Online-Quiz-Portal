{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M4h1DuL MooN\\\\fullstackweb\\\\Online-Quiz-Portal\\\\frontend\\\\src\\\\Components\\\\Quiz\\\\GiveQuiz.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Button, Col, Row } from 'react-bootstrap';\n\nclass GiveQuiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.checkboxclick = (e, option, answer) => {\n      if (option === answer) {//alert(\"success\");\n      } else {//alert('worng');\n        }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"Quiz\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, this.props.question.map(singlequestion => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGridAddress1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, \"Question:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: singlequestion.question,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    })), singlequestion.quiztype === 'mcq' && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      onClick: e => this.checkboxclick(e, singlequestion.option1, singlequestion.answer),\n      label: singlequestion.option1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      onClick: e => this.checkboxclick(e, singlequestion.option2, singlequestion.answer),\n      label: singlequestion.option2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      onClick: e => this.checkboxclick(e, singlequestion.option3, singlequestion.answer),\n      label: singlequestion.option3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: singlequestion.option4,\n      onClick: e => this.checkboxclick(e, singlequestion.option4, singlequestion.answer),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    })))), singlequestion.quiztype === 'writeontextbox' && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, \"Write your Answer\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }))), singlequestion.quiztype === 'fileupload' && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      id: \"exampleFormControlFile1\",\n      label: \"Insert Your file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default GiveQuiz;","map":{"version":3,"sources":["C:/Users/M4h1DuL MooN/fullstackweb/Online-Quiz-Portal/frontend/src/Components/Quiz/GiveQuiz.js"],"names":["React","Component","Form","Container","Button","Col","Row","GiveQuiz","state","checkboxclick","e","option","answer","render","props","question","map","singlequestion","quiztype","option1","option2","option3","option4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form,Container,Button,Col,Row } from 'react-bootstrap';\r\n\r\n\r\nclass GiveQuiz extends Component {\r\n    state = {\r\n        \r\n    }\r\n    \r\n    checkboxclick = (e,option,answer) =>{\r\n        if(option === answer){\r\n            //alert(\"success\");\r\n        }else{\r\n            //alert('worng');\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <center><h2>Quiz</h2></center>\r\n                <br />\r\n\r\n                <React.Fragment>\r\n                <Form>\r\n                {this.props.question.map(singlequestion =>\r\n                    \r\n                    <React.Fragment>\r\n                        <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Question:</Form.Label>\r\n                        <Form.Control placeholder={singlequestion.question} disabled />\r\n                    </Form.Group>\r\n                    {singlequestion.quiztype === 'mcq' && \r\n                        <React.Fragment>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option1,singlequestion.answer)} label={singlequestion.option1} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option2,singlequestion.answer)} label={singlequestion.option2} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option3,singlequestion.answer)} label={singlequestion.option3} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Check type=\"checkbox\" label={singlequestion.option4} onClick={ e => this.checkboxclick(e,singlequestion.option4,singlequestion.answer)} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    \r\n                    {singlequestion.quiztype ==='writeontextbox' && \r\n                        <React.Fragment>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Write your Answer</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"3\" />\r\n                            </Form.Group>\r\n                            \r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    {singlequestion.quiztype ==='fileupload' && \r\n                        <React.Fragment>\r\n                            \r\n                            <Form.Group>\r\n                                <Form.File id=\"exampleFormControlFile1\" label=\"Insert Your file\" />\r\n                            </Form.Group>\r\n                        </React.Fragment>\r\n                    }\r\n                    </React.Fragment>    \r\n                )}\r\n                    \r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Button variant=\"primary\">Submit</Button>\r\n                    </Col>\r\n                    \r\n                </Row>   \r\n\r\n                    \r\n                </Form>\r\n                <br/>\r\n                </React.Fragment>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GiveQuiz;"]},"metadata":{},"sourceType":"module"}