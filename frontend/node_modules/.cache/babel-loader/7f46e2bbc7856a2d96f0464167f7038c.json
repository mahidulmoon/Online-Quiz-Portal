{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M4h1DuL MooN\\\\fullstackweb\\\\Online-Quiz-Portal\\\\frontend\\\\src\\\\Components\\\\Quiz\\\\GiveQuiz.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Button, Col, Row, Modal } from 'react-bootstrap';\n\nclass GiveQuiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: true,\n      modalform: {\n        name: '',\n        id: '',\n        contact: ''\n      }\n    };\n\n    this.checkboxclick = (e, option, answer) => {\n      if (option === answer) {//alert(\"success\");\n      } else {//alert('worng');\n        }\n    };\n\n    this.handleClose = event => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.modalinputchange = e => {\n      const cred = this.state.modalform;\n      cred[e.target.name] = e.target.value;\n      this.setState({\n        modalform: cred\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, \"Quiz\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"Complainer Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      name: \"name\",\n      onChange: this.modalinputchange,\n      value: this.state.modalform.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"ID:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"id\",\n      name: \"id\",\n      onChange: this.modalinputchange,\n      value: this.state.modalform.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"contact\",\n      onChange: this.modalinputchange,\n      value: this.state.modalform.contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Countdown to my birthday:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"days\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }), \"days\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"hours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), \"Hours\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }), \"Minutes\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"seconds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }), \"Seconds\"))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, this.props.question.map(singlequestion => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGridAddress1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Question:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: singlequestion.question,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), singlequestion.quiztype === 'mcq' && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      onClick: e => this.checkboxclick(e, singlequestion.option1, singlequestion.answer),\n      label: singlequestion.option1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      onClick: e => this.checkboxclick(e, singlequestion.option2, singlequestion.answer),\n      label: singlequestion.option2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      onClick: e => this.checkboxclick(e, singlequestion.option3, singlequestion.answer),\n      label: singlequestion.option3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: singlequestion.option4,\n      onClick: e => this.checkboxclick(e, singlequestion.option4, singlequestion.answer),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    })))), singlequestion.quiztype === 'writeontextbox' && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, \"Write your Answer\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Submit\")), singlequestion.quiztype === 'fileupload' && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      id: \"exampleFormControlFile1\",\n      label: \"Insert Your file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, \"Submit Answer\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default GiveQuiz;","map":{"version":3,"sources":["C:/Users/M4h1DuL MooN/fullstackweb/Online-Quiz-Portal/frontend/src/Components/Quiz/GiveQuiz.js"],"names":["React","Component","Form","Container","Button","Col","Row","Modal","GiveQuiz","state","show","modalform","name","id","contact","checkboxclick","e","option","answer","handleClose","event","setState","modalinputchange","cred","target","value","render","props","question","map","singlequestion","quiztype","option1","option2","option3","option4"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAcC,SAAd,EAAwBC,MAAxB,EAA+BC,GAA/B,EAAmCC,GAAnC,EAAuCC,KAAvC,QAAoD,iBAApD;;AAGA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BQ,KAD6B,GACrB;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,SAAS,EAAC;AACNC,QAAAA,IAAI,EAAC,EADC;AACEC,QAAAA,EAAE,EAAC,EADL;AACQC,QAAAA,OAAO,EAAC;AADhB;AAFN,KADqB;;AAAA,SAQ7BC,aAR6B,GAQb,CAACC,CAAD,EAAGC,MAAH,EAAUC,MAAV,KAAoB;AAChC,UAAGD,MAAM,KAAKC,MAAd,EAAqB,CACjB;AACH,OAFD,MAEK,CACD;AACH;AACJ,KAd4B;;AAAA,SAe7BC,WAf6B,GAedC,KAAD,IAAU;AACpB,WAAKC,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KAjB4B;;AAAA,SAkB7BY,gBAlB6B,GAkBVN,CAAC,IAAG;AACnB,YAAMO,IAAI,GAAG,KAAKd,KAAL,CAAWE,SAAxB;AACAY,MAAAA,IAAI,CAAEP,CAAC,CAACQ,MAAF,CAASZ,IAAX,CAAJ,GAAwBI,CAAC,CAACQ,MAAF,CAASC,KAAjC;AACA,WAAKJ,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAEY;AAAb,OAAd;AACH,KAtB4B;AAAA;;AAuB7BG,EAAAA,MAAM,GAAG;AAEL,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAOI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,IAAxB;AAA8B,MAAA,MAAM,EAAE,KAAKS,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAY,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACR,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,YAAtC;AAAmD,MAAA,IAAI,EAAC,MAAxD;AAA+D,MAAA,QAAQ,EAAE,KAAKG,gBAA9E;AAAgG,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,SAAX,CAAqBC,IAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADQ,eAMR,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,IAAtC;AAA2C,MAAA,IAAI,EAAC,IAAhD;AAAqD,MAAA,QAAQ,EAAE,KAAKU,gBAApE;AAAsF,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,SAAX,CAAqBE,EAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANQ,eAUR,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,OAAtC;AAA8C,MAAA,IAAI,EAAC,SAAnD;AAA6D,MAAA,QAAQ,EAAE,KAAKS,gBAA5E;AAA8F,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,SAAX,CAAqBG,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVQ,eAgBR,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBQ,CAAZ,CAJJ,eAwBI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKK,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CAxBJ,CADA,eAgCA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,SADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,UAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,YAJJ,CAFJ,CAhCA,eAyCA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKQ,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwBC,cAAc,iBAEnC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,WAAW,EAAEA,cAAc,CAACF,QAA1C;AAAoD,MAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,EAKCE,cAAc,CAACC,QAAf,KAA4B,KAA5B,iBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE1B,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,OAAO,EAAGW,CAAC,IAAI,KAAKD,aAAL,CAAmBC,CAAnB,EAAqBc,cAAc,CAACE,OAApC,EAA4CF,cAAc,CAACZ,MAA3D,CAA3C;AAA+G,MAAA,KAAK,EAAEY,cAAc,CAACE,OAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,eAOI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE3B,GAAhB;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,OAAO,EAAGW,CAAC,IAAI,KAAKD,aAAL,CAAmBC,CAAnB,EAAqBc,cAAc,CAACG,OAApC,EAA4CH,cAAc,CAACZ,MAA3D,CAA3C;AAA+G,MAAA,KAAK,EAAEY,cAAc,CAACG,OAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAPJ,CADJ,eAcI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE5B,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,OAAO,EAAGW,CAAC,IAAI,KAAKD,aAAL,CAAmBC,CAAnB,EAAqBc,cAAc,CAACI,OAApC,EAA4CJ,cAAc,CAACZ,MAA3D,CAA3C;AAA+G,MAAA,KAAK,EAAEY,cAAc,CAACI,OAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,eAOI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE7B,GAAhB;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAEyB,cAAc,CAACK,OAAlD;AAA2D,MAAA,OAAO,EAAGnB,CAAC,IAAI,KAAKD,aAAL,CAAmBC,CAAnB,EAAqBc,cAAc,CAACK,OAApC,EAA4CL,cAAc,CAACZ,MAA3D,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAPJ,CAdJ,CANJ,EAqCCY,cAAc,CAACC,QAAf,KAA2B,gBAA3B,iBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,8BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CAtCJ,EAkDCD,cAAc,CAACC,QAAf,KAA2B,YAA3B,iBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAC,yBAAd;AAAwC,MAAA,KAAK,EAAC,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAnDJ,CAFH,CADD,eAuEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAFJ,CAvEA,CAzCA,eA0HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1HA,CAPJ,CADJ;AAsIH;;AA/J4B;;AAkKjC,eAAevB,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form,Container,Button,Col,Row,Modal } from 'react-bootstrap';\r\n\r\n\r\nclass GiveQuiz extends Component {\r\n    state = {\r\n        show: true,\r\n        modalform:{\r\n            name:'',id:'',contact:''\r\n        },\r\n    }\r\n    \r\n    checkboxclick = (e,option,answer) =>{\r\n        if(option === answer){\r\n            //alert(\"success\");\r\n        }else{\r\n            //alert('worng');\r\n        }\r\n    }\r\n    handleClose = (event) =>{\r\n        this.setState({ show: false });\r\n    }\r\n    modalinputchange = e =>{\r\n        const cred = this.state.modalform;\r\n        cred[ e.target.name ] = e.target.value;\r\n        this.setState({ modalform: cred });\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <center><h2>Quiz</h2></center>\r\n                <br />\r\n\r\n                <React.Fragment>\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Complainer Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body><Form>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Name\" name=\"name\" onChange={this.modalinputchange} value={this.state.modalform.name} />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label>ID:</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"id\" name=\"id\" onChange={this.modalinputchange} value={this.state.modalform.id} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label>Contact</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Phone\" name=\"contact\" onChange={this.modalinputchange} value={this.state.modalform.contact} />\r\n                        </Form.Group>\r\n                        \r\n                        \r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form></Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div class=\"container\">\r\n                    <h1>Countdown to my birthday:</h1>\r\n                    <ul>\r\n                        <li><span id=\"days\"></span>days</li>\r\n                        <li><span id=\"hours\"></span>Hours</li>\r\n                        <li><span id=\"minutes\"></span>Minutes</li>\r\n                        <li><span id=\"seconds\"></span>Seconds</li>\r\n                    </ul>\r\n                </div>\r\n                <Form>\r\n                {this.props.question.map(singlequestion =>\r\n                    \r\n                    <React.Fragment>\r\n                        <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Question:</Form.Label>\r\n                        <Form.Control placeholder={singlequestion.question} disabled />\r\n                    </Form.Group>\r\n                    {singlequestion.quiztype === 'mcq' && \r\n                        <React.Fragment>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option1,singlequestion.answer)} label={singlequestion.option1} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option2,singlequestion.answer)} label={singlequestion.option2} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option3,singlequestion.answer)} label={singlequestion.option3} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Check type=\"checkbox\" label={singlequestion.option4} onClick={ e => this.checkboxclick(e,singlequestion.option4,singlequestion.answer)} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    \r\n                    {singlequestion.quiztype ==='writeontextbox' && \r\n                        <React.Fragment>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Write your Answer</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"3\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                            \r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    {singlequestion.quiztype ==='fileupload' && \r\n                        <React.Fragment>\r\n                            \r\n                            <Form.Group>\r\n                                <Form.File id=\"exampleFormControlFile1\" label=\"Insert Your file\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" >\r\n                            Submit\r\n                            </Button>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                        </React.Fragment>\r\n                    }\r\n                    </React.Fragment>    \r\n                )}\r\n                    \r\n\r\n                <Row>\r\n                    \r\n                    <Col>\r\n                        <Button variant=\"success\" >Submit Answer</Button>\r\n                    </Col>\r\n                    \r\n                </Row>   \r\n\r\n                    \r\n                </Form>\r\n                <br/>\r\n                </React.Fragment>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GiveQuiz;"]},"metadata":{},"sourceType":"module"}