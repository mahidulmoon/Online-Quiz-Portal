{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M4h1DuL MooN\\\\fullstackweb\\\\Online-Quiz-Portal\\\\frontend\\\\src\\\\Components\\\\Quiz\\\\GiveQuiz.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Button, Col, Row } from 'react-bootstrap';\n\nclass GiveQuiz extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkboxclick = (e, option, answer) => {\n      if (option === answer) {//alert(\"success\");\n      } else {//alert('worng');\n        }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \"Quiz\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, this.props.question.map(singlequestion => {\n      const checkvar = false;\n\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridAddress1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, \"Question:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: singlequestion.question,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      })), singlequestion.quiztype === 'mcq' && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        checked: checkvar,\n        onClick: e => this.checkboxclick(e, singlequestion.option1, singlequestion.answer),\n        label: singlequestion.option1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        onClick: e => this.checkboxclick(e, singlequestion.option2, singlequestion.answer),\n        label: singlequestion.option2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        onClick: e => this.checkboxclick(e, singlequestion.option3, singlequestion.answer),\n        label: singlequestion.option3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: singlequestion.option4,\n        onClick: e => this.checkboxclick(e, singlequestion.option4, singlequestion.answer),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      })))), singlequestion.quiztype === 'writeontextbox' && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, \"Write your Answer\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }))), singlequestion.quiztype === 'fileupload' && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.File, {\n        id: \"exampleFormControlFile1\",\n        label: \"Insert Your file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }))));\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default GiveQuiz;","map":{"version":3,"sources":["C:/Users/M4h1DuL MooN/fullstackweb/Online-Quiz-Portal/frontend/src/Components/Quiz/GiveQuiz.js"],"names":["React","Component","Form","Container","Button","Col","Row","GiveQuiz","checkboxclick","e","option","answer","render","props","question","map","singlequestion","checkvar","quiztype","option1","option2","option3","option4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form,Container,Button,Col,Row } from 'react-bootstrap';\r\n\r\n\r\nclass GiveQuiz extends Component {\r\n    \r\n    checkboxclick = (e,option,answer) =>{\r\n        if(option === answer){\r\n            //alert(\"success\");\r\n        }else{\r\n            //alert('worng');\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <Container>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <center><h2>Quiz</h2></center>\r\n                <br />\r\n\r\n                <React.Fragment>\r\n                <Form>\r\n                {this.props.question.map(singlequestion =>\r\n                    \r\n                    {\r\n                    const checkvar = false ;\r\n                    <React.Fragment>\r\n                        <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Question:</Form.Label>\r\n                        <Form.Control placeholder={singlequestion.question} disabled />\r\n                    </Form.Group>\r\n                    {singlequestion.quiztype === 'mcq' && \r\n                        <React.Fragment>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Check type=\"checkbox\" checked={checkvar} onClick={ e => this.checkboxclick(e,singlequestion.option1,singlequestion.answer)} label={singlequestion.option1} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option2,singlequestion.answer)} label={singlequestion.option2} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Check type=\"checkbox\" onClick={ e => this.checkboxclick(e,singlequestion.option3,singlequestion.answer)} label={singlequestion.option3} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Check type=\"checkbox\" label={singlequestion.option4} onClick={ e => this.checkboxclick(e,singlequestion.option4,singlequestion.answer)} />\r\n                                \r\n                                \r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    \r\n                    {singlequestion.quiztype ==='writeontextbox' && \r\n                        <React.Fragment>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Write your Answer</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"3\" />\r\n                            </Form.Group>\r\n                            \r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    {singlequestion.quiztype ==='fileupload' && \r\n                        <React.Fragment>\r\n                            \r\n                            <Form.Group>\r\n                                <Form.File id=\"exampleFormControlFile1\" label=\"Insert Your file\" />\r\n                            </Form.Group>\r\n                        </React.Fragment>\r\n                    }\r\n                    </React.Fragment>   } \r\n                )}\r\n                    \r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Button variant=\"primary\">Submit</Button>\r\n                    </Col>\r\n                    \r\n                </Row>   \r\n\r\n                    \r\n                </Form>\r\n                <br/>\r\n                </React.Fragment>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GiveQuiz;"]},"metadata":{},"sourceType":"module"}